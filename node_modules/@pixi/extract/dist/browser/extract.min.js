/*!
 * @pixi/extract - v6.4.2
 * Compiled Thu, 02 Jun 2022 15:39:26 UTC
 *
 * @pixi/extract is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
this.PIXI=this.PIXI||{};var _pixi_extract=function(e,t,r,n,i){"use strict";var a=new r.Rectangle,o=function(){function e(e){this.renderer=e}return e.prototype.image=function(e,t,r){var n=new Image;return n.src=this.base64(e,t,r),n},e.prototype.base64=function(e,t,r){return this.canvas(e).toDataURL(t,r)},e.prototype.canvas=function(r){var i,o,s,d=this.renderer,h=!1,u=!1;r&&(r instanceof n.RenderTexture?s=r:(s=this.renderer.generateTexture(r),u=!0)),s?(i=s.baseTexture.resolution,o=s.frame,h=!1,d.renderTexture.bind(s)):(i=this.renderer.resolution,h=!0,(o=a).width=this.renderer.width,o.height=this.renderer.height,d.renderTexture.bind(null));var c=Math.floor(o.width*i+1e-4),l=Math.floor(o.height*i+1e-4),x=new t.CanvasRenderTarget(c,l,1),g=new Uint8Array(4*c*l),v=d.gl;v.readPixels(o.x*i,o.y*i,c,l,v.RGBA,v.UNSIGNED_BYTE,g);var f=x.context.getImageData(0,0,c,l);if(e.arrayPostDivide(g,f.data),x.context.putImageData(f,0,0),h){var I=new t.CanvasRenderTarget(x.width,x.height,1);I.context.scale(1,-1),I.context.drawImage(x.canvas,0,-l),x.destroy(),x=I}return u&&s.destroy(!0),x.canvas},e.prototype.pixels=function(t,r){var o,s,d,h=this.renderer,u=!1;t&&(t instanceof n.RenderTexture?d=t:t instanceof i.DisplayObject&&(d=this.renderer.generateTexture(t),u=!0)),d?r?(o=r.resolution,s=d.frame,h.renderTexture.bind(d)):(o=d.baseTexture.resolution,s=d.frame,h.renderTexture.bind(d)):r?(o=r.resolution,(s=a).width=r.width,s.height=r.height,h.renderTexture.bind(null)):(o=h.resolution,(s=a).width=h.width,s.height=h.height,h.renderTexture.bind(null));var c=s.width*o,l=s.height*o,x=new Uint8Array(4*c*l),g=h.gl;return g.readPixels(s.x*o,s.y*o,c,l,g.RGBA,g.UNSIGNED_BYTE,x),u&&d.destroy(!0),e.arrayPostDivide(x,x),x},e.prototype.destroy=function(){this.renderer=null},e.arrayPostDivide=function(e,t){for(var r=0;r<e.length;r+=4){var n=t[r+3]=e[r+3];0!==n?(t[r]=Math.round(Math.min(255*e[r]/n,255)),t[r+1]=Math.round(Math.min(255*e[r+1]/n,255)),t[r+2]=Math.round(Math.min(255*e[r+2]/n,255))):(t[r]=e[r],t[r+1]=e[r+1],t[r+2]=e[r+2])}},e}();return e.Extract=o,Object.defineProperty(e,"__esModule",{value:!0}),e}({},PIXI.utils,PIXI,PIXI,PIXI);Object.assign(this.PIXI,_pixi_extract);
//# sourceMappingURL=extract.min.js.map
